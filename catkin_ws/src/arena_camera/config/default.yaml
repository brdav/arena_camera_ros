# NOTE
# USED BY the package .launch files

#  The tf frame under which the images were published
camera_frame: arena_camera

#  The DeviceUserID of the camera. If empty, the first camera found in the
#  device list will be used
device_user_id: ""

#  The CameraInfo URL (Uniform Resource Locator) where the optional intrinsic
#  camera calibration parameters are stored. This URL string will be parsed
#  from the ROS-CameraInfoManager:
#  http://docs.ros.org/api/camera_info_manager/html/classcamera__info__manager_
#  1_1CameraInfoManager.html#details
camera_info_url: package://arena_camera/config/camera.yaml

#  The encoding of the pixels -- channel meaning, ordering, size
#  taken from the list of strings in include/sensor_msgs/image_encodings.h
#  The supported encodings are 'mono8', 'bgr8', 'rgb8', 'bayer_bggr8',
#  'bayer_gbrg8' and 'bayer_rggb8'
#  Default values are 'mono8' and 'rgb8'
image_encoding: "bayer_rggb16"

#  Binning factor to get downsampled images. It refers here to any camera
#  setting which combines rectangular neighborhoods of pixels into larger
#  "super-pixels." It reduces the resolution of the output image to
#  (width / binning_x) x (height / binning_y).
#  The default values binning_x = binning_y = 0 are considered the same
#  as binning_x = binning_y = 1 (no subsampling).
# binning_x: 1
# binning_y: 1

#  The desired publisher frame rate if listening to the topics.
#  This parameter can only be set once at startup
#  Calling the GrabImages-Action can result in a higher framerate
frame_rate: 24.0

#  The exposure time in microseconds to be set after opening the camera.
# exposure: 10000.0

#  The target gain in percent of the maximal value the camera supports
#  For USB-Cameras, the gain is in dB, for GigE-Cameras it is given in so
#  called 'device specific units'.
# gain: 0.5

#  The average intensity value of the images. It depends the exposure time
#  as well as the gain setting. If 'exposure' is provided, the interface will
#  try to reach the desired brightness by only varying the gain. (What may
#  often fail, because the range of possible exposure vaules is many
#  times higher than the gain range). If 'gain' is provided, the interface will
#  try to reach the desired brightness by only varying the exposure time. If
#  gain AND exposure are given, it is not possible to reach the brightness,
#  because both are assumed to be fix.
#  This should be set lower, since the auto exposure/gain
#  algorithm only looks at the highest 8 bits, which leads to an overestimation of gain
brightness: 20

#  Only relevant, if 'brightness' is set:
#  If the camera should try to reach and / or keep the brightness, hence
#  adapting to changing light conditions, at least one of the following flags
#  must be set.
#  If both are set, the interface will use the profile that tries to keep the
#  gain at minimum to reduce white noise.
#  The exposure_auto flag indicates, that the desired brightness will be
#  reached by adapting the exposure time.
#  The gain_auto flag indicates, that the desired brightness will be
#  reached by adapting the gain.
exposure_auto: true
gain_auto: true
gain_auto_upper_limit: 20

ptp_enable: false  #true

# Communication options
stream_packet_resend_enable: true  # retransmission in case of invalid packet
stream_auto_negotiate_packet_size: true
stream_max_num_resend_requests_per_image: 200
packet_delay: 80 #5FPS:3000

# crop size param
width: 1920 # 2880 # (min:4 max:2880)
height: 1080 # 1860 # (min:2 max:1860)
offsetX: 480
offsetY: 390

# White Balance param
# This functionality is buggy: when turned on, dimming the lens will lead to color artifacts. When turned off, 
# the artifacts will appear the next time it's turned on. A Device power cycle is necessary to reset it
balance_white_auto: true
